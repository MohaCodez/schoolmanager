import { Component, OnInit } from '@angular/core';
import { Course } from './course';
import { CourseService } from './course.service';
import { ActivatedRoute } from '@angular/router';
import { NgxUiLoaderService } from 'ngx-ui-loader';
import { ToastrService } from 'ngx-toastr'; // Import ToastrService

@Component({
  selector: 'app-courses',
  templateUrl: './table.component.html',
  styleUrls: ['./table.component.css']
})
export class CoursesComponent implements OnInit {
  courses: Course[] = [];
  displayDialog: boolean = false;
  selectedCourse: Course | null = null;

  constructor(
    private courseService: CourseService, 
    private route: ActivatedRoute,
    private ngxLoader: NgxUiLoaderService,
    private toastr: ToastrService // Inject ToastrService
  ) { }
  
  ngOnInit(): void {
    this.route.data.subscribe(data => {
      this.courses = data['courses'];
    });
  }

  showAddDialog(): void {
    this.selectedCourse = {
      id: undefined,  // Assuming the ID is generated by the backend
      name: null,
      branch: null,
      description: null,
      credits: null
    };
    this.displayDialog = true;
  }

  editCourse(course: Course): void {
    this.selectedCourse = { ...course }; // Copy the course to avoid mutating the original object
    this.displayDialog = true;
  }

  deleteCourse(id: number): void {
    this.ngxLoader.start(); // Start loading indicator
    this.courseService.deleteCourse(id)
      .subscribe(
        () => {
          this.refreshCourses();
          this.toastr.success('Course deleted successfully'); // Success toast
        },
        error => {
          this.toastr.error('Failed to delete course'); // Error toast
        }
      );
  }

  closeDialog(): void {
    this.displayDialog = false;
    this.refreshCourses(); // Refresh courses after dialog is closed
  }

  refreshCourses(): void {
    this.ngxLoader.start(); // Start loading indicator
    this.courseService.getCourses().subscribe(
      courses => {
        this.courses = courses;
        this.toastr.info('Course list updated'); // Info toast
        this.ngxLoader.stop(); // Stop loading indicator when data is loaded
      },
      error => {
        this.toastr.error('Failed to update course list'); // Error toast
        this.ngxLoader.stop(); // Stop loading indicator on error
      }
    );
  }
}
